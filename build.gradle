plugins {
	id 'java'
	id 'maven-publish'
	id 'com.github.node-gradle.node' version '3.0.1'
	id 'com.enonic.xp.app' version '2.0.0'
	id 'com.enonic.xp.run' version '2.0.0'
	id 'com.enonic.defaults' version '2.0.1'
}


repositories {
	jcenter()
	xp.enonicRepo()
}


app {
    name = "${appName}"
    displayName = "Developer Site"
    vendorName = "${vendorName}"
    vendorUrl = "${vendorUrl}"
    systemVersion = "${xpVersion}"
	instruction( "Private-Package", "*;-split-package:=merge-first;META-INF.jruby.home.*;" )
}

dependencies {
	include "org.asciidoctor:asciidoctorj-api:2.4.2"
	include "org.asciidoctor:asciidoctorj:2.4.2"
	compile "com.enonic.xp:portal-api:${xpVersion}"
	include "com.enonic.xp:lib-content:${xpVersion}"
	include "com.enonic.xp:lib-context:${xpVersion}"
	include "com.enonic.xp:lib-common:${xpVersion}"
	include "com.enonic.xp:lib-task:${xpVersion}"
	include "com.enonic.xp:lib-portal:${xpVersion}"
	include "org.jsoup:jsoup:1.13.1"
	include "org.eclipse.jgit:org.eclipse.jgit:5.10.0.202012080955-r"
	include "org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:5.10.0.202012080955-r"
	include "com.enonic.lib:lib-http-client:2.1.0"
	include "com.enonic.lib:lib-menu:3.0.0"
	include "com.enonic.lib:lib-thymeleaf:2.0.0"
	include "com.enonic.lib:lib-util:2.2.1"
	include "com.enonic.lib:lib-urlredirect:3.0.0"
	include "com.enonic.lib:lib-cache:2.1.1"
	testCompile "junit:junit:4.13.2"
	testCompile "org.mockito:mockito-core:3.7.7"
}




//──────────────────────────────────────────────────────────────────────────────
// Gradle node plugin
//──────────────────────────────────────────────────────────────────────────────
node {
	version = '14.15.0'
	download = true
}


def nodeEnvironment() {
	def envName = 'production';
	if (hasProperty( 'env' ) && getAt('env') == 'dev') {
		envName = 'development';
	}

	println "Environment is set to $envName"

	return envName
}

//──────────────────────────────────────────────────────────────────────────────
// Gulp TODO This could/should be replaced with webpack
//──────────────────────────────────────────────────────────────────────────────

task buildGulp(type: NpmTask, dependsOn: npmInstall) {
	environment = [ 'NODE_ENV': nodeEnvironment() ]
	args = ["run", "gulp"]
	inputs.file("gulpfile.babel.js")
	inputs.dir("src")
	outputs.dir("build")
}


//──────────────────────────────────────────────────────────────────────────────
// Webpack
//──────────────────────────────────────────────────────────────────────────────
sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources { // Paths relative to src/main/resources
			exclude '**/*.es' // Avoid having your es files copied into ./build
		}
	}
}

task webpack(type:NodeTask) {
	environment = [ 'NODE_ENV': nodeEnvironment() ]
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
	]
}
webpack.dependsOn buildGulp
jar.dependsOn webpack
